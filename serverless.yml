# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

  # These environment variables are made available to our functions
  # under process.env
  environment: 
    tableName: notes
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}
  
  # 'iamRoleStatements' defines permission policy for Lambda function
  # Lambda functions granted with permissions to access DDB
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-2:*:*"
  

functions:
  billing:
    # Defines an HTTP API endpoint that calls main of billing.js
    # - path: url path is /billing
    # - method: POST request
    handler: billing.main
    events: 
      - http:
          path: billing
          method: post
          authorizer: aws_iam
  delete:
    # Defines an HTTP API endpoint that calls main of delete.js
    # - path: url path is /notes/{id}
    # - method: DELETE request
    handler: delete.main
    events: 
      - http:
          path: notes/{id}
          method: delete
          authorizer: aws_iam
  update:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: update.main
    events:
      - http: 
          path: notes/{id}
          method: put
          authorizer: aws_iam
  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: list.main
    events:
      - http:
          path: notes
          method: get 
          authorizer: aws_iam
  get:
    # Define an HTTP API endpoint that calls function in get.js
    # - path: url path is /notes/{id}
    # - method: GET request
    handler: get.main
    events: 
      - http:
          path: notes/{id}
          method: get
          authorizer: aws_iam
  create:
    # Define an HTTP API endpoint that calls function 
    # - path: url path is /notes
    # - method: POST request
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          authorizer: aws_iam
